var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "state", function () {
  return state;
});
_parcelHelpers.export(exports, "loadForecast", function () {
  return loadForecast;
});
require("regenerator-runtime");
var _configJs = require("./config.js");
var _helpersJs = require("./helpers.js");
const state = {
  forecast: {
    days: []
  },
  weather: {},
  hourly: {}
};
const createWeatherObject = function (data) {
  const weather = data;
  return {
    name: weather.name,
    main: weather.main,
    dt: weather.dt,
    weather: weather.weather[0]
  };
};
const loadForecast = async function (place) {
  try {
    const data = await _helpersJs.getJSON(`${_configJs.API_FORECAST}q=${place}&appid=${_configJs.API_KEY}`);
    const {city, list} = data;
    state.forecast.city = data.city;
    console.log(data);
    state.forecast.days = data.list.reduce((prev, current) => {
      let date = current.dt_txt.split(" ")[0];
      if (!prev[date]) prev[date] = [];
      prev[date].push({
        main: current.weather[0].main,
        desc: current.weather[0].description,
        icon: current.weather[0].icon,
        temp: current.main,
        dateTime: new Date(current.dt_txt)
      });
      return prev;
    });
    state.hourly = data.list.slice(0, 8);
  } catch (err) {
    console.error(`${err} !!!`);
    throw err;
  }
};
