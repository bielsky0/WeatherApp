require("regenerator-runtime");
var _modelJs = require("./model.js");
var _viewMapViewJs = require("./view/mapView.js");
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _viewMapViewJsDefault = _parcelHelpers.interopDefault(_viewMapViewJs);
var _viewSearchViewJs = require("./view/searchView.js");
var _viewSearchViewJsDefault = _parcelHelpers.interopDefault(_viewSearchViewJs);
var _viewCurrentViewJs = require("./view/currentView.js");
var _viewCurrentViewJsDefault = _parcelHelpers.interopDefault(_viewCurrentViewJs);
var _viewHourlyViewJs = require("./view/hourlyView.js");
var _viewHourlyViewJsDefault = _parcelHelpers.interopDefault(_viewHourlyViewJs);
var _viewFiveDayForecastViewJs = require("./view/fiveDayForecastView.js");
var _viewFiveDayForecastViewJsDefault = _parcelHelpers.interopDefault(_viewFiveDayForecastViewJs);
if (module.hot) {
  module.hot.accept(function () {
    window.location.reload();
  });
}
const displayMarker = function (latlng) {
  if (_viewMapViewJsDefault.default.marker) {
    _viewMapViewJsDefault.default.map.removeLayer(_viewMapViewJsDefault.default.marker);
  }
  _viewMapViewJsDefault.default.marker = new L.Marker(latlng).addTo(_viewMapViewJsDefault.default.map);
  _viewMapViewJsDefault.default.map.setView(latlng, 10, {
    animate: true,
    pan: {
      duration: 1
    }
  });
};
const controlWeather = async function (city) {
  try {
    // Render spinners
    _viewCurrentViewJsDefault.default.renderSpinner();
    _viewHourlyViewJsDefault.default.renderSpinner();
    _viewFiveDayForecastViewJsDefault.default.renderSpinner();
    // Get data
    // await model.loadCurrnetWeather(city);
    await _modelJs.loadForecast(city);
    // Render data
    _viewCurrentViewJsDefault.default.render(_modelJs.state2.forecast.current[0]);
    _viewHourlyViewJsDefault.default.render(_modelJs.getHourResult(1));
    _viewFiveDayForecastViewJsDefault.default.render(_modelJs.state.forecast.days);
    displayMarker(_modelJs.state.forecast.city.coord);
  } catch (err) {
    _viewCurrentViewJsDefault.default.renderError(err.message);
    _viewHourlyViewJsDefault.default.renderError(err.message);
    _viewFiveDayForecastViewJsDefault.default.renderError(err.message);
  }
};
const controlMap = async function (latlng) {
  const {lat, lng} = latlng;
  _viewCurrentViewJsDefault.default.renderSpinner();
  _viewHourlyViewJsDefault.default.renderSpinner();
  _viewFiveDayForecastViewJsDefault.default.renderSpinner();
  await _modelJs.loadForecastByCoords(lat, lng);
  // await model.loadCurrentWeatherByCoords(lat, lng);
  _viewCurrentViewJsDefault.default.render(_modelJs.state2.forecast.current[0]);
  _viewHourlyViewJsDefault.default.render(_modelJs.getHourResult(1));
  _viewFiveDayForecastViewJsDefault.default.render(_modelJs.state2.forecast.days);
  displayMarker(latlng);
};
const control3HourForecast = function (date) {
  _modelJs.createCurrentObj(date);
  _viewCurrentViewJsDefault.default.render(_modelJs.state2.forecast.current[0]);
  _modelJs.loadHourResults(date);
  _viewHourlyViewJsDefault.default.render(_modelJs.state.hourly);
};
const init = function () {
  _viewSearchViewJsDefault.default.addHandlerFormSubmit(controlWeather);
  _viewMapViewJsDefault.default.addHandlerClick(controlMap);
  _viewFiveDayForecastViewJsDefault.default.addHandlerClick(control3HourForecast);
};
init();
